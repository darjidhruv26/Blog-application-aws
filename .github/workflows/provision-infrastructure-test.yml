name: Provision Infrastructure PR Test
on:
  # pull_request:
  #   branches:
  #     - main
  #     - develop
  #     - Infrastructure-terrafrom
  #   paths:
  #     - Infrastructure/app/**
  #     - .github/workflows/provision-infrastructure*

    push:
      branches:
        - Infrastructure-terrafrom
      paths:
        - Infrastructure/app/**
        - .github/workflows/provision-infrastructure*
jobs:
  provision-infra:
    name: Plan Infra Codebase
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
          role-duration-seconds: 900
          role-session-name: github-action
          role-skip-session-tagging: true

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0 # Replace with your required Terraform version
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        working-directory: ./Infrastructure/app
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: ./Infrastructure/app
        run: terraform init

      - name: Terraform Validate
        working-directory: ./Infrastructure/app
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: ./Infrastructure/app
        run: terraform plan -no-color
        env:
          TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Update Pull Request
        uses: robburger/terraform-pr-commenter@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commenter_type: plan
          commenter_input: ${{ steps.plan.outputs.stdout }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
